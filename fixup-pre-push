#!/bin/bash

# This is git pre-push hook. It validates that no commit
# message contains the word 'fixup' or some variation of
# it. It is assumed that the intent is to use git rebase to
# combine such commits with others and that they should
# not be pushed.

# Copyright (c) 2017 Matt Champion
# Licensed under the MIT licence

# This hook is called with the two parameters:
#
# - name of the remote being pushed to
# - URL of the remote being pushed to
#
# Information about the commits to be pushed is passed
# through the standard input. A single line is provided for
# each ref being pushed:
#
# <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"

declare -a BAD_COMMITS
IFS=' '
while read local_ref local_sha remote_ref remote_sha ; do
    # For each remote list the commits that are present locally
    # but not in the remote
    while read commit ; do
        # For each commit check if the message contains 'fixup'
        # and if it does push the commit into an array
        git log --format=%B -n 1 ${commit} | grep -i fixup >> /dev/null
        if [ $? -eq 0 ]; then
            BAD_COMMITS[${#BAD_COMMITS[@]}]=${commit}
        fi
    done < <(git log --format=%H ${remote_sha}..${local_sha})
done

if [ ${#BAD_COMMITS[@]} -ne 0 ]; then
    # If there are any commits containing 'fixup' prevent
    # the commits from being pushed
    echo "${#BAD_COMMITS[@]} commits found containing 'fixup' in their message"
    echo
    for commit in "${BAD_COMMITS[@]}" ; do
        # Report on the commits containing 'fixup'
        echo "${commit} rejected, needs to be fixed up"
        git log --format=%B -n 1 ${commit} | cat
    done
    echo "Alternatively use the flag --no-verify to disable the verification."
    exit 1
fi

exit 0
